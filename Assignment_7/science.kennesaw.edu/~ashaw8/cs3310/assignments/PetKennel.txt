using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using PetKennel.Models;

namespace PetKennel.Controllers
{
    [HandleError]
    public class HomeController : Controller
    {
        public PetKennelDBEntities db = new PetKennelDBEntities();

        public ActionResult Index()
        {
            ViewData["Message"] = "Welcome to the Pet Kennel!";

            return View();
        }

        public ActionResult About()
        {
            return View();
        }

        public ActionResult List()
        {
            ViewData["Message"] = "Here's the list of the pets at the Kennel:";
            return View(db.Pets);
        }

        public ActionResult Details(int ID)
        {
            ViewData["Message"] = "Details of this pet:";
            try
            {
                Pet thePet = (from p in db.Pets
                          where (p.ID == ID)
                          select p).First();
                return View(thePet);
            }
            catch
            {
                return RedirectToAction("Error");
            }
        }

        public ActionResult Create()
        {
            ViewData["Message"] = "Fill in the details for this pet:";
            return View();
        }

        [HttpPost]
        public ActionResult Create(Pet p)
        {
            try
            {
                if (!ModelState.IsValid)
                {
                    ViewData["Message"] = "Problem With Entry On Form:";
                    return View("Create", p);
                }

                db.AddToPets(p);
                db.SaveChanges();

                return RedirectToAction("List");
            }
            catch
            {
                ViewData["Message"] = "Problem Creating Pet Account:";
                return View("Create", p);
            }
        }

        public ActionResult Edit(int ID)
        {
            ViewData["Message"] = "Edit the following Pet's Information:";
            try
            {
                Pet thePet = (from p in db.Pets
                              where (p.ID == ID)
                              select p).First();
                return View(thePet);
            }
            catch
            {
                return RedirectToAction("Error");
            }
        }

        [HttpPost]
        public ActionResult Edit(Pet pet)
        {
            try
            {
                if (!ModelState.IsValid)
                {
                    ViewData["Message"] = "Problem With Edit To Entry On Form:";
                    return View("Edit", pet);
                }

                Pet thePet = (from p in db.Pets
                              where (p.ID == pet.ID)
                              select p).First();

                thePet.Name = pet.Name;
                thePet.Age = pet.Age;
                thePet.AnimalType = pet.AnimalType;
                thePet.AnimalImage = pet.AnimalImage;
                db.SaveChanges();

                return RedirectToAction("List");
            }
            catch
            {
                ViewData["Message"] = "Problem Editing Pet Account:";
                return View("Edit", pet);
            }
        }

        public ActionResult Delete(int ID)
        {
            ViewData["Message"] = "Delete the following Pet:";
            try
            {
                Pet thePet = (from p in db.Pets
                              where (p.ID == ID)
                              select p).First();
                return View(thePet);
            }
            catch
            {
                return RedirectToAction("Error");
            }
        }

        [HttpPost]
        public ActionResult Delete(Pet pet)
        {
            try
            {
                if (!ModelState.IsValid || pet == null)
                    return RedirectToAction("Error");

                Pet thePet = (from p in db.Pets
                              where (p.ID == pet.ID)
                              select p).First();

                db.Pets.DeleteObject(thePet);
                db.SaveChanges();

                return RedirectToAction("List");
            }
            catch
            {
                ViewData["Message"] = "Problem Deleting Pet Account:";
                return View("Delete", pet);
            }
        }

        public ActionResult Error()
        {
            ViewData["Message"] = "Error: Invalid Data";
            return View();
        }
    }
}

